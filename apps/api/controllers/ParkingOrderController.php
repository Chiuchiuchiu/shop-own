<?php
/**
 * Created by PhpStorm.
 * User: HQM
 * Date: 2018/11/12
 */

namespace apps\api\controllers;


use apps\api\models\ParkingOrder;
use yii\data\ActiveDataProvider;
use yii\data\Pagination;

class ParkingOrderController extends Controller
{
    public $modelClass = 'apps\api\models\ParkingOrder';

    public function actions()
    {
        $actions = parent::actions(); // TODO: Change the autogenerated stub
        unset($actions['index']);
        unset($actions['create']);
        unset($actions['view']);
        unset($actions['update']);
        unset($actions['delete']);

        return $actions;
    }

    public function actionList()
    {
        $list = [];
        $dataProvider = new ActiveDataProvider();
        $dataProvider->query = ParkingOrder::find()
            ->where([
                'status' => [ParkingOrder::STATUS_PAYED, ParkingOrder::STATUS_TEST_PAYED, ParkingOrder::STATUS_REFUND],
                'member_id' => $this->userId
            ])
            ->orderBy('created_at DESC');
        $dataProvider->setPagination(new Pagination(['validatePage' => false]));
        $dataProvider->setSort(false);

        foreach($dataProvider->getModels() as $model){
            /**
             * @var $model ParkingOrder
             */
            $list[] = [
                'orderId' => $model->id,
                'amount' => $model->amount,
                'type' => $model->type,
                'typeText' => $model->typeText,
                'quantity' => $model->quantity,
                'effectDate' => date('Y-m-d', $model->effect_date), //缴费开始日期
                'expireDate' => date('Y-m-d', $model->expire_date), //缴费结束日期
                'inDate' => $model->effectDate, //入场时间
                'payedAt' => date('Y-m-d H:i:s', $model->payed_at),
                'status' => $model->status,
                'statusText' => $model->statusText,
                'number' => $model->number,
            ];
        }

        return $this->renderJsonSuccess(200, $list);
    }

    public function actionDetail($id=0)
    {
        $model = ParkingOrder::findOne([
            'member_id' => $this->userId,
            'id' => $id
        ]);
        if(!$model){
            return $this->renderJsonFail(80001);
        }

        $result = [
            'orderId' => $model->id,
            'number' => $model->number,
            'typeText' => $model->typeText,
            'type' => $model->type,
            'amount' => $model->amount,
            'payedAt' => date('Y-m-d H:i:s', $model->payed_at),
            'quantity' => $model->quantity,
            'effectDate' => date('Y-m-d', $model->effect_date), //缴费开始日期
            'expireDate' => date('Y-m-d', $model->expire_date), //缴费结束日期
            'inDate' => $model->effectDate, //入场时间
            'status' => $model->status,
            'statusText' => $model->statusText,
        ];

        return $this->renderJsonSuccess(200, $result);
    }

}